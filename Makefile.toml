[config]
default_to_workspace = false
skip_core_tasks = true

[env]
# OVMF_PATH = "/usr/share/ovmf/OVMF.fd"

[tasks.build]
dependencies = [
  # {name = "build", path = "lib"},
  { name = "build", path = "sikikernel" },
  { name = "build", path = "sikiloader" },
]
run_task = "disk"

[tasks.check]
dependencies = [
  # {name = "check", path = "lib"},
  { name = "check", path = "sikikernel" },
  { name = "check", path = "sikiloader" },
]
run_task = "disk"

[tasks.run]
dependencies = ["build"]
run_task = "qemu"

[tasks.clean]
dependencies = [
  { name = "clean", path = "lib" },
  { name = "clean", path = "sikikernel" },
  { name = "clean", path = "sikiloader" },
]

[tasks.disk]
run_task = { name = [
  "disk-rm",
  "disk-create",
  "disk-mount",
  "disk-copy",
  "disk-umount",
], fork = true }

[tasks.disk-rm]
ignore_errors = true
script = '''
echo disk-rm
rm disk.img
'''

[tasks.disk-create]
script = '''
echo disk-create
qemu-img create -f raw disk.img 200M
mkfs.fat -n "SIKIKERNEL" -s 2 -f 2 -F 32 -R 32 disk.img
'''

[tasks.disk-mount.linux]
script = '''
echo disk-mount.linux
mkdir -p ./mnt
sudo mount -o loop disk.img ./mnt
'''

[tasks.disk-mount.mac]
script = '''
#!/usr/bin/env bash
echo disk-mount.mac
mkdir -p ./mnt
disk=$(hdiutil attach -nomount disk.img)
mount_msdos $disk ./mnt
'''

[tasks.disk-copy.linux]
script = '''
sudo mkdir -p ./mnt/EFI/BOOT
sudo cp ./target/x86_64-unknown-uefi/debug/sikiloader.efi ./mnt/EFI/BOOT/BOOTX64.EFI
sudo cp ./kernel.elf ./mnt/kernel.elf
'''

[tasks.disk-copy.mac]
script = '''
mkdir -p ./mnt/EFI/BOOT
cp ./target/x86_64-unknown-uefi/debug/sikiloader.efi ./mnt/EFI/BOOT/BOOTX64.EFI
cp ./kernel.elf ./mnt/kernel.elf
'''

[tasks.disk-umount.linux]
ignore_errors = true
script = '''
sudo umount ./mnt
sudo rm -r ./mnt
'''

[tasks.disk-umount.mac]
ignore_errors = true
script = '''
umount ./mnt
rm -r ./mnt
hdiutil detach /dev/disk4
'''

[tasks.qemu]
dependencies = ["disk"]
script = '''
qemu-system-x86_64 \
    -m 1G \
    -bios ${OVMF_PATH} \
    -drive format=raw,media=disk,index=0,file=disk.img \
    -device nec-usb-xhci,id=xhci \
    -device usb-mouse -device usb-kbd \
    -device isa-debug-exit \
    -serial stdio \
'''

[tasks.qemu.mac]
dependencies = ["disk"]
script = '''
qemu-system-x86_64 \
    -m 1G \
    -bios ${OVMF_PATH} \
    -drive format=raw,media=disk,index=0,file=disk.img \
    -device nec-usb-xhci,id=xhci \
    -device usb-mouse -device usb-kbd \
    -device isa-debug-exit \
    -serial stdio \
'''

# [tasks.qemu.mac]
# dependencies = ["disk"]
# script = '''
# qemu-system-x86_64 \
#     -m 1G \
#     -bios ${OVMF_PATH}/OVMF.fd \
#     -drive format=raw,media=disk,index=0,file=disk.img \
#     -device nec-usb-xhci,id=xhci \
#     -device usb-mouse -device usb-kbd \
#     -device isa-debug-exit \
#     -monitor stdio \
# '''
